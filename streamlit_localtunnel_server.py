import os
import subprocess
import time
import requests
import asyncio
import telegram
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã Telegram
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHANNEL_ID = os.getenv("TELEGRAM_CHANNEL_ID")

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã Streamlit
STREAMLIT_APP_FILE = "streamlit_app.py"
STREAMLIT_PORT = 8501

async def send_telegram_message(bot_token, chat_id, message, disable_web_page_preview=False):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram."""
    try:
        bot = telegram.Bot(token=bot_token)
        await bot.send_message(
            chat_id=chat_id,
            text=message,
            parse_mode='HTML',
            disable_web_page_preview=disable_web_page_preview
        )
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram —á–∞—Ç {chat_id}")
        return True
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")
        return False

def get_localtunnel_url(port):
    """–°–æ–∑–¥–∞–µ—Ç —Ç—É–Ω–Ω–µ–ª—å —Å –ø–æ–º–æ—â—å—é localtunnel –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É–±–ª–∏—á–Ω—ã–π URL."""
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º localtunnel
        process = subprocess.Popen(
            f"npx localtunnel --port {port}",
            shell=True,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            text=True
        )
        
        # –ñ–¥–µ–º, –ø–æ–∫–∞ localtunnel –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∏ –≤—ã–¥–∞—Å—Ç URL
        for line in process.stdout:
            if "your url is:" in line.lower():
                url = line.strip().split("your url is: ")[1]
                return url, process
                
        # –ï—Å–ª–∏ URL –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É
        process.terminate()
        return None, None
    
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ localtunnel: {e}")
        return None, None

def start_streamlit_with_localtunnel():
    # –ó–∞–ø—É—Å–∫–∞–µ–º Streamlit –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
    streamlit_process = subprocess.Popen(
        f"streamlit run {STREAMLIT_APP_FILE} --server.port={STREAMLIT_PORT}",
        shell=True
    )
    
    localtunnel_process = None
    
    try:
        # –ñ–¥–µ–º, —á—Ç–æ–±—ã Streamlit —É—Å–ø–µ–ª –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
        print("–ó–∞–ø—É—Å–∫ Streamlit...")
        time.sleep(5)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º localtunnel –¥–ª—è –ø–æ—Ä—Ç–∞ Streamlit
        print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç—É–Ω–Ω–µ–ª—è —Å localtunnel...")
        public_url, localtunnel_process = get_localtunnel_url(STREAMLIT_PORT)
        
        if not public_url:
            raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL –æ—Ç localtunnel")
            
        print(f"Localtunnel —Å–æ–∑–¥–∞–Ω: {public_url}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
        message = f"""
<b>üè¢ –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –î—É–±–∞–µ: —Å–∞–º—ã–µ –¥–µ—à–µ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã</b>

–û–±–Ω–æ–≤–ª–µ–Ω –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –æ—Ç—á–µ—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–∞–º—ã—Ö –¥–µ—à–µ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä –ø–æ –≤—Å–µ–º —Ä–µ–≥–∏–æ–Ω–∞–º –î—É–±–∞—è (–ø–ª–æ—â–∞–¥—å –¥–æ 40 –∫–≤.–º).

<b>–ß—Ç–æ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤ –æ—Ç—á–µ—Ç–µ:</b>
‚Ä¢ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ —Å –º–∞—Ä–∫–µ—Ä–∞–º–∏ –∫–≤–∞—Ä—Ç–∏—Ä
‚Ä¢ –¢–æ–ø-10 —Ä–µ–≥–∏–æ–Ω–æ–≤ —Å —Å–∞–º—ã–º–∏ –Ω–∏–∑–∫–∏–º–∏ —Ü–µ–Ω–∞–º–∏
‚Ä¢ –ü–æ–ª–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –≤—Å–µ—Ö –∫–≤–∞—Ä—Ç–∏—Ä —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏

<b>–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:</b> {time.strftime('%d.%m.%Y')}

<b>–°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ç—á–µ—Ç:</b> 
{public_url}

<i>–û—Ç—á–µ—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞ –∑–∞–ø—É—â–µ–Ω —Å–µ—Ä–≤–µ—Ä.</i>
"""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
        if TELEGRAM_BOT_TOKEN and TELEGRAM_CHANNEL_ID:
            asyncio.run(send_telegram_message(
                TELEGRAM_BOT_TOKEN,
                TELEGRAM_CHANNEL_ID,
                message
            ))
        else:
            print("–í–ù–ò–ú–ê–ù–ò–ï: –ù–µ —É–∫–∞–∑–∞–Ω—ã TELEGRAM_BOT_TOKEN –∏–ª–∏ TELEGRAM_CHANNEL_ID")
            print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ —Ç—É–¥–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:")
            print("TELEGRAM_BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
            print("TELEGRAM_CHANNEL_ID=–≤–∞—à_–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä_–∫–∞–Ω–∞–ª–∞")
        
        print("\n–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω! –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–Ω—ã–º
        streamlit_process.wait()
        
    except KeyboardInterrupt:
        print("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")
    except Exception as e:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
    finally:
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
        if localtunnel_process and localtunnel_process.poll() is None:
            localtunnel_process.terminate()
            print("Localtunnel –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω")
            
        if streamlit_process and streamlit_process.poll() is None:
            streamlit_process.terminate()
            print("Streamlit –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ Node.js (–Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è npx –∏ localtunnel)
    try:
        subprocess.run(["node", "--version"], check=True, stdout=subprocess.PIPE)
        print("Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä...")
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
        start_streamlit_with_localtunnel()
    except (subprocess.CalledProcessError, FileNotFoundError):
        print("–û—à–∏–±–∫–∞: Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node.js:")
        print("1. –°–∫–∞—á–∞–π—Ç–µ Node.js —Å https://nodejs.org/")
        print("2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª")
        print("3. –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node.js –∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
        exit(1) 