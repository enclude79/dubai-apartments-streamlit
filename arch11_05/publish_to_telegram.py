import os
import asyncio
import logging
from datetime import datetime
from telegram import Bot
from find_cheapest_apartments_with_urls import find_cheapest_apartments

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã Telegram (–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è)
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
TELEGRAM_CHANNEL_ID = os.getenv('TELEGRAM_CHANNEL_ID')

async def publish_to_telegram(content: str):
    """–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ Telegram –∫–∞–Ω–∞–ª"""
    if not TELEGRAM_BOT_TOKEN:
        logger.error("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
        
    if not TELEGRAM_CHANNEL_ID:
        logger.error("TELEGRAM_CHANNEL_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return False
        
    try:
        bot = Bot(token=TELEGRAM_BOT_TOKEN)
        
        # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏ –ø–æ 4000 —Å–∏–º–≤–æ–ª–æ–≤
        # (–º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram)
        max_length = 4000
        parts = [content[i:i+max_length] for i in range(0, len(content), max_length)]
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –¥–ª—è –ø–µ—Ä–≤–æ–π —á–∞—Å—Ç–∏
        current_date = datetime.now().strftime('%d.%m.%Y')
        parts[0] = f"üè† *–¢—Ä–∏ —Å–∞–º—ã—Ö –¥–µ—à–µ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä—ã –≤ –∫–∞–∂–¥–æ–º —Ä–∞–π–æ–Ω–µ (–¥–æ 40 –∫–≤.–º.) - {current_date}*\n\n{parts[0]}"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ —á–∞—Å—Ç—è–º
        for i, part in enumerate(parts):
            if i > 0:
                part = f"... –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–≤–∞—Ä—Ç–∏—Ä {i+1}/{len(parts)} ...\n\n{part}"
                
            logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —á–∞—Å—Ç–∏ {i+1}/{len(parts)} –≤ Telegram –∫–∞–Ω–∞–ª {TELEGRAM_CHANNEL_ID}")
            await bot.send_message(
                chat_id=TELEGRAM_CHANNEL_ID,
                text=part,
                parse_mode='Markdown',
                disable_web_page_preview=True  # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –¥–ª—è —Å—Å—ã–ª–æ–∫
            )
            
            # –î–µ–ª–∞–µ–º –ø–∞—É–∑—É –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ —Ñ–ª—É–¥–∞
            if i < len(parts) - 1:
                await asyncio.sleep(2)
                
        logger.info("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ Telegram")
        return True
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram: {e}")
        return False

def format_for_telegram(content: str) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è Telegram —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Markdown"""
    # –ó–∞–º–µ–Ω—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã Markdown
    content = content.replace("_", "\\_").replace("*", "\\*").replace("[", "\\[").replace("`", "\\`")
    
    # –ó–∞–º–µ–Ω—è–µ–º "–†–∞–π–æ–Ω:" –Ω–∞ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    content = content.replace("–†–∞–π–æ–Ω:", "*–†–∞–π–æ–Ω:*")
    
    # –ó–∞–º–µ–Ω—è–µ–º –æ–±—ã—á–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ Markdown-—Å—Å—ã–ª–∫–∏
    lines = content.split('\n')
    formatted_lines = []
    
    for line in lines:
        if "–°—Å—ã–ª–∫–∞: http" in line:
            parts = line.split("–°—Å—ã–ª–∫–∞: ")
            url = parts[1].strip()
            formatted_lines.append(f"   [üîó –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ]({url})")
        else:
            formatted_lines.append(line)
    
    return '\n'.join(formatted_lines)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –Ω–∞–π—Ç–∏ –¥–µ—à–µ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∏—Ö –≤ Telegram"""
    logger.info("–ó–∞–ø—É—Å–∫ –ø–æ–∏—Å–∫–∞ —Å–∞–º—ã—Ö –¥–µ—à–µ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –¥–µ—à–µ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä
    apartments_content = find_cheapest_apartments()
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–ª—è Telegram
    telegram_content = format_for_telegram(apartments_content)
    
    # –ü—É–±–ª–∏–∫—É–µ–º –≤ Telegram
    success = await publish_to_telegram(telegram_content)
    
    if success:
        logger.info("–î–∞–Ω–Ω—ã–µ –æ –¥–µ—à–µ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä–∞—Ö —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ Telegram")
    else:
        logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –¥–µ—à–µ–≤—ã—Ö –∫–≤–∞—Ä—Ç–∏—Ä–∞—Ö –≤ Telegram")

if __name__ == "__main__":
    asyncio.run(main()) 